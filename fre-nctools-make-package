#!/bin/tcsh -f
#
# ------------------------------------------------------------------------------
# FMS/FRE Project: Program to Create the fre-nctools Package
# ------------------------------------------------------------------------------
# Copyright (C) NOAA Geophysical Fluid Dynamics Laboratory, 2009-2012, 2016
# Designed and written by V Balaji, Amy Langenhorst, Aleksey Yakovlev and
# Seth Underwood
#
set pkgName = fre-nctools
set pkgVersion = $1

echo $pkgVersion

#Loop though these directories to build the tools there.
set freNCToolsSrc = 'tools/{check_mask,fregrid,make_coupler_mosaic,make_hgrid,make_regional_mosaic,make_quick_mosaic,make_solo_mosaic,make_topog,make_vgrid,ncexists,remap_land,river_regrid,runoff_regrid,transfer_to_mosaic_grid,mppncscatter,make_land_domain} postprocessing/{land_utils,list_ncvars,combine_blobs,mppnccombine,mppnccombine-2.1.7-memstats,ncx,plevel,timavg}'

#Other source code used during those compiles.
set freNCToolsOther = 'postprocessing/split_ncvars shared/mosaic tools/shared'

# Save the srcdif
# This first run assumes you are in the git directory
set srcDir = `pwd`

#Build in a temporary directory, inside the srcDir.
set tmpDir = $srcDir/build.$pkgVersion.$$
mkdir -p $tmpDir
if ( $status ) then
  echo "Error during mkdir '$tmpDir'..."
  exit 1
endif
pushd $tmpDir

echo "////////////////////////////////////////////////////////////////////////////////"
echo "//////////////////////////////////////////////////////// Environment Settings //"
echo "////////////////////////////////////////////////////////////////////////////////"

set site = `perl -T -e "use Net::Domain(hostdomain); print hostdomain" | sed 's/\.$//'`
if ( "$site" == "princeton.rdhpcs.noaa.gov" ) then
  source /usr/local/Modules/default/init/tcsh
  module use -a /home/fms/local/modulefiles
  module load intel_compilers/15.0.1 mpich2/1.2.1p1 netcdf/4.2
  setenv FRE_SYSTEM_SITE gfdl
  setenv LD_RUN_PATH $LD_LIBRARY_PATH
  alias make make HDF5_HOME=/usr/local/hdf5-1.8.8_optimized NETCDF_HOME=/usr/local/netcdf-4.2_optimized SITE=pan -f fre-nctools.mk
else if ( "$site" == "gfdl.noaa.gov" ) then
  source /usr/local/Modules/default/init/tcsh
  module use -a /home/fms/local/modulefiles
  module load netcdf/4.2
  # netcdf/4.2 loads intel-11, so unload it now
  module unload intel_compilers/11.1.073
  module load intel_compilers/15.0.0
  module use /home/sdu/publicmodules
  module load mpich2/1.5b1
  setenv FRE_SYSTEM_SITE gfdl-ws
  setenv LD_RUN_PATH $LD_LIBRARY_PATH
  alias make make HDF5_HOME=/usr/local/x64/hdf5-1.8.8_optimized NETCDF_HOME=/usr/local/x64/netcdf-4.2_optimized SITE=gfdl-ws -f fre-nctools.mk
  set NOPARALLEL
else if ( "$site" == "ncrc.gov" ) then
  source $MODULESHOME/init/tcsh
  module use -a /ncrc/home2/fms/local/modulefiles
  module rm PrgEnv-pgi PrgEnv-pathscale
  module load PrgEnv-intel/5.2.82
  module swap intel intel/15.0.2.164
  module load cray-netcdf/4.3.3.1
  module load cray-hdf5/1.8.14
  setenv FRE_SYSTEM_SITE ncrc3
  setenv MPICH_UNEX_BUFFER_SIZE 256m
  setenv MPICH_MAX_SHORT_MSG_SIZE 64000
  setenv MPICH_PTL_UNEX_EVENTS 160k
  setenv KMP_STACKSIZE 2g
  setenv F_UFMTENDIAN big
  alias make make HDF5_HOME=$HDF5_DIR NETCDF_HOME=$NETCDF_DIR NC_BLKSZ=64K SITE=gaea -f fre-nctools.mk
else if ( "$site" == "ccs.ornl.gov" ) then
  source $MODULESHOME/init/tcsh
  module rm PrgEnv-pgi PrgEnv-intel PrgEnv-gnu PrgEnv-cray
  module load PrgEnv-intel
  module swap intel intel/15.0.2.164
  module load cray-netcdf/4.3.3.1
  setenv FRE_SYSTEM_SITE olcf
  alias make make HDF5_HOME=/opt/cray/hdf5/1.8.14/INTEL/140 NETCDF_HOME=/opt/cray/netcdf/4.3.3.1/INTEL/140 NC_BLKSZ=64K SITE=olcf -f fre-nctools.mk
else if ( "$site" == "theia.fairmont.rdhpcs.noaa.gov") then
  source $MODULESHOME/init/tcsh
  module use -a /home/fms/local/modulefiles
  module purge
  module load intel/15.1.133
  module load impi
  module load fre/bronx-9
  setenv FRE_SYSTEM_SITE theia
  setenv LIBRARY_PATH ${LIBRARY_PATH}:/apps/intel/composer_xe_2015.1.133/compiler/lib/intel64
  setenv LD_RUN_PATH ${LD_LIBRARY_PATH}:/apps/hdf5/1.8.14-intel/lib:/apps/netcdf/4.3.0-intel/lib
  echo $LD_RUN_PATH

  alias make make HDF5_HOME=/apps/hdf5/1.8.14-intel NETCDF_HOME=/apps/netcdf/4.3.0-intel SITE=theia LDFLAGS='-Wl,-rpath=/apps/intel/composer_xe_2015.1.133/compiler/lib/intel64,-rpath=/apps/hdf5/1.8.14-intel/lib,-rpath=/apps/netcdf/4.3.0-intel/lib' -f fre-nctools.mk
else
  echo "ERROR: Unsupported site '$site'"
  exit 1
endif

module list

echo "Done..."

echo "////////////////////////////////////////////////////////////////////////////////"
echo "//////////////////////////////////////////////////////////// Directory Layout //"
echo "////////////////////////////////////////////////////////////////////////////////"

mkdir -p share/src
cp -r ${srcDir}/{postprocessing,shared,tools} share/src
mkdir -p $FRE_SYSTEM_SITE/bin
mkdir -p share/bin

cp share/src/postprocessing/list_ncvars/list_ncvars.csh $tmpDir/share/bin
cp share/src/postprocessing/plevel/plevel.sh $tmpDir/share/bin
cp share/src/postprocessing/split_ncvars/split_ncvars.csh $tmpDir/share/bin
cp share/src/postprocessing/split_ncvars/split_ncvars.py $tmpDir/share/bin
cp share/src/postprocessing/split_ncvars/split_ncvars.pl $tmpDir/share/bin
cp share/src/postprocessing/split_ncvars/varlist.csh $tmpDir/share/bin
cp share/src/postprocessing/timavg/timavg.csh $tmpDir/share/bin
cp share/src/postprocessing/iceberg_comb/iceberg_comb.sh $tmpDir/share/bin
cp share/src/postprocessing/combine_restarts/combine_restarts $tmpDir/share/bin

echo "Done..."

foreach freNCToolsDir ( $freNCToolsSrc )
  echo "////////////////////////////////////////////////////////////////////////////////"
  echo "////////////////////////////////////////////////////////////////// $freNCToolsDir:t"
  echo "////////////////////////////////////////////////////////////////////////////////"

  pushd share/src/$freNCToolsDir
  set targets=` grep "TARGETS  :=" fre-nctools.mk | cut -f2 -d'=' `
  if ( $?NOPARALLEL ) then
     set targets=` grep "TARGETS  :=" fre-nctools.mk | cut -f2 -d'=' | sed 's/ \S*_parallel/ /'`
  endif
  echo "Making $targets"

  make clean
  make
  if ( $status ) then
   echo "Error: make failed for $targets"
   exit 1
  endif

  foreach target ( $targets )
    if ( -f $target ) then
      mv $target $tmpDir/$FRE_SYSTEM_SITE/bin
    else
      echo "Error during '$target' build"
      exit 1
    endif
  end
  make clean
  popd
end

echo "////////////////////////////////////////////////////////////////////////////////"
echo "/////////////////////////////////////////////////////////////////// Archiving //"
echo "////////////////////////////////////////////////////////////////////////////////"

tar -cvzf $pkgName-$pkgVersion.$FRE_SYSTEM_SITE.tar.gz *
if ( $status ) then
  echo "Error during archiving..."
  exit 1
endif

echo "////////////////////////////////////////////////////////////////////////////////"
echo "/////////////////////////////////////////////////////////////////// Finishing //"
echo "////////////////////////////////////////////////////////////////////////////////"

popd

if ( -f $tmpDir/$pkgName-$pkgVersion.$FRE_SYSTEM_SITE.tar.gz ) then
  mv $tmpDir/$pkgName-$pkgVersion.$FRE_SYSTEM_SITE.tar.gz .
  echo "Success!"
else
  echo "Error..."
endif
exit
rm -fr $tmpDir
